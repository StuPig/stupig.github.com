<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

   <title>StuPig</title>
   <link href="http://www.stupig.me/atom.xml" rel="self" type="application/atom+xml"/>
   <link href="http://www.stupig.me" rel="alternate" type="text/html" />
   <updated>2012-12-27T12:22:44+08:00</updated>
   <id>http://www.stupig.me</id>
   <author>
     <name>StuPig</name>
     <email>shouqiang.gong@gmail.com</email>
   </author>

   
   <entry>
     <title>我要学会的</title>
     <link href="http://www.stupig.me/blog/2012/10/22/what-i-should-learned/"/>
     <updated>2012-10-22T00:00:00+08:00</updated>
     <id>http://www.stupig.me/blog/2012/10/22/what-i-should-learned</id>
     <content type="html">&lt;h4&gt;我做的大错特错的&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;没胆量在做错事情的时候去承担，第一时间想到的不是去面对问题，而是去逃避&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;没有自己的主见，总是为别人所动摇&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;遇到问题，总是指望别人能帮到你，没人能帮你，自己的错误要自己扛&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不吸取教训，屡教不改，还放任自流&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h4&gt;我应该要学会做的&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;做一件事情前，不要只照顾眼前，要从长远看，做这件事情究竟对自己好，还是让自己更糟&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尽自己所能去做对的事情，不管结果怎样&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;吸取教训&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</content>
   </entry>
   
   <entry>
     <title>i'm a stupig guy</title>
     <link href="http://www.stupig.me/blog/2012/10/21/i%27m-a-stupig-guy.md/"/>
     <updated>2012-10-21T00:00:00+08:00</updated>
     <id>http://www.stupig.me/blog/2012/10/21/i'm-a-stupig-guy.md</id>
     <content type="html">i'm so upset to point out what i'v learned about myself these days:

#####I'm just tooooooooooooooooooooooo lazy, too lazy to integrate into the world of others. what i wanna is someone to integrate into mine. i'm a stupid guy full of negative energy

#####i'm too scared to write this in Chinese. :(
</content>
   </entry>
   
   <entry>
     <title>Web服务器反向代理——跨域的另一种方案</title>
     <link href="http://www.stupig.me/blog/2012/08/26/use-nginx-reverse-proxy-for-xmlhttprequest/"/>
     <updated>2012-08-26T00:00:00+08:00</updated>
     <id>http://www.stupig.me/blog/2012/08/26/use-nginx-reverse-proxy-for-xmlhttprequest</id>
     <content type="html">&lt;h4&gt;前情回顾&lt;/h4&gt;

&lt;p&gt;之前在上一篇”&lt;a href=&quot;http://stupig.me/blog/2012/08/20/web-proxy-for-cross-domain-xmlhttprequest-calls/&quot;&gt;后端代理——跨域的另一种方案&lt;/a&gt;“一文中简单介绍了下前端跨域的几种实现方案，并详细介绍了“后端代理”的方式，协助前端跨域的方案。&lt;/p&gt;

&lt;p&gt;真实的环境中更多的不是非0即1的二进制，而是适合与更适合。尤其是在做方案选取的时候，各种方案各有优劣，更多是去根据自己的场景选取一个最适合自己的。重新回到前端跨域问题，我在后端代理——跨域的另一种方案中也对各种方案做了简单的总结。欢迎大家拍砖。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4&gt;需求&lt;/h4&gt;

&lt;p&gt;最近在&lt;code&gt;Hybrid App&lt;/code&gt;项目的开发过程中，数据需要跟“移动后台API'”同学获取，因为我俩都是本地开发，本地起Web服务，因此，我在请求他（http://192.168.60.31:8602/api/v3/deal/search/substore/129180）的时候就果断碰到了跨域问题。&lt;/p&gt;

&lt;h4&gt;方案选取&lt;/h4&gt;

&lt;p&gt;因为目前业务功能涉及到的还只是&lt;code&gt;GET&lt;/code&gt;请求，所以我首先想到通过&lt;code&gt;JSONP&lt;/code&gt;的方式解决。但是很快遭到了后台同学的拒绝，因为这不是改动大或小、简不简单的问题，而是这种任务就不应该又后台同学来做。&lt;/p&gt;

&lt;p&gt;这回污染了后端&lt;code&gt;API&lt;/code&gt;的代码。因为不能污染后台的代码，我似乎只有一条选择，便是之前提到的&lt;code&gt;后端代理&lt;/code&gt;的方式，但是想到以后只要涉及到&lt;code&gt;移动后台API&lt;/code&gt;的开发，我就要一直维护这份&lt;code&gt;代理&lt;/code&gt;的代码，我也挺头疼。&lt;/p&gt;

&lt;p&gt;想到既然可以通过后端代理，那样似乎代表着可以利用比后端更底层，与前端&lt;code&gt;HTTP&lt;/code&gt;请求更亲近的Web服务器去做反向代理，来实现跨域？简单查了下资料，发现网上早有先例。&lt;/p&gt;

&lt;h4&gt;反向代理&lt;/h4&gt;

&lt;p&gt;“反向代理（Reverse Proxy）是指以代理服务器来接受&lt;code&gt;Internet&lt;/code&gt;上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给&lt;code&gt;Internet&lt;/code&gt;请求连接的客户端，此时，代理服务器对外就表现为一个服务器。”——《实战Nginx》&lt;/p&gt;

&lt;h4&gt;正向代理&lt;/h4&gt;

&lt;p&gt;既然有反向代理，就肯定有正向代理。什么叫正向代理呢？&lt;/p&gt;

&lt;p&gt;正向代理（Forward Proxy），通常都被简称为代理，就是在用户无法正常访问外部资源，比方说受到GFW的影响无法访问twitter的时候，我们可以通过代理的方式，让用户绕过防火墙，从而连接到目标网络或者服务。&lt;/p&gt;

&lt;h4&gt;反向代理VS正向代理&lt;/h4&gt;

&lt;p&gt;&lt;img title=&quot;反向代理VS正向代理&quot; alt=&quot;反向代理VS正想代理&quot; src=&quot;/post_images/2012/08/Forward-Proxy-vs-Reverse-Proxy.jpeg&quot; width=&quot;600&quot;  /&gt;&lt;/p&gt;

&lt;h4&gt;反向代理的优势&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;请求的统一控制，包括设置权限、过滤规则等&lt;/li&gt;
&lt;li&gt;区分动态和静态可缓存内容&lt;/li&gt;
&lt;li&gt;隐藏内部服务真实地址，暴露在外的只是反向代理服务器地址&lt;/li&gt;
&lt;li&gt;实现负载均衡，内部可以采用多台服务器来组成服务器集群，外部还是可以采用一个地址访问&lt;/li&gt;
&lt;li&gt;解决Ajax跨域问题&lt;/li&gt;
&lt;li&gt;作为真实服务器的缓冲，解决瞬间负载量大的问题&lt;/li&gt;
&lt;/ol&gt;


&lt;h4&gt;反向代理服务器的配置&lt;/h4&gt;

&lt;p&gt;此处以&lt;code&gt;Nginx&lt;/code&gt;和&lt;code&gt;Apache&lt;/code&gt;为例，&lt;code&gt;Lighttpd&lt;/code&gt;等&lt;code&gt;Web&lt;/code&gt;服务器同样支持。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nginx&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;proxy_set_header&lt;/code&gt;是向反向代理的后端&lt;code&gt;Web&lt;/code&gt;服务器请求时，添加制定的header头信息。当请求的后端&lt;code&gt;Web&lt;/code&gt;服务器有多个基于域名的虚拟主机时，要通过添加指定的&lt;code&gt;Host&lt;/code&gt;来区分。&lt;/p&gt;

&lt;p&gt;在请求和响应头中添加&lt;code&gt;X-Forwarded-For&lt;/code&gt;原始请求的地址，因为使用了反向代理之后，后端&lt;code&gt;Web&lt;/code&gt;服务器（以PHP为例）就不能通过&lt;code&gt;$_SERVER[&quot;REMOTE_ADDR&quot;]&lt;/code&gt;变量来获取用户真实的&lt;code&gt;IP&lt;/code&gt;了。&lt;/p&gt;

&lt;p&gt;此时&lt;code&gt;$_SERVER[&quot;REMOTE_ADDR&quot;]&lt;/code&gt;指向的是反向代理的&lt;code&gt;Nginx&lt;/code&gt;服务器&lt;code&gt;IP&lt;/code&gt;，通过&lt;code&gt;$_SERVER[&quot;X-Forwarded-For&quot;]&lt;/code&gt;来获取&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ProxyPass和ProxyPassReverse指令都是反向代理需要的配置。&lt;/p&gt;

&lt;p&gt; ProxyPass用于将一个远程服务器映射到本地服务器的URL空间中。&lt;/p&gt;

&lt;p&gt;而ProxyPassReverse主要解决后端服务器重定向造成的绕过反向代理的问题，在后端服务器会进行服务器端跳转时使用，对HTTP重定向时回应中的Location、Content-Location和URI头里的URL进行调整。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;参考资料&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/hfahe/article/details/5721320&quot;&gt;用Nginx和Apache的反向代理解决Ajax的跨域问题&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://book.douban.com/subject/4251875/&quot;&gt;《实战Nginx》&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wiki.nginx.org/Chs&quot;&gt;《Nginx中文维基》&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.celinio.net/techblog/?p=1027&quot;&gt;Proxy vs Reverse-proxy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/luochuan/article/details/7217837&quot;&gt;关于反向代理&lt;/a&gt;&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>我不懂我自己</title>
     <link href="http://www.stupig.me/blog/2012/08/25/i-do-not-even-know-myself/"/>
     <updated>2012-08-25T00:00:00+08:00</updated>
     <id>http://www.stupig.me/blog/2012/08/25/i-do-not-even-know-myself</id>
     <content type="html">&lt;p&gt;音乐、文字、照片、电影，甚至是一句再普通不过的对白，都很容易把自己带入一种情愫，拨乱心弦&lt;/p&gt;

&lt;p&gt;一直追求的放下，一直希望的内心平和，在一段文字面前，在夹带着回忆和憧憬的情愫下，消失的无影无踪。
取而代之的是内心的悸动。或许这就是共鸣吧，很多东西我不知道我知道，很多情感我不知道我了解。这时候才发现，我真的不懂我自己&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;以为自己很狂妄，
    却依旧为伊消得人憔悴

以为自己很专一
    一路走来却是薄情郎

以为自己喜新厌旧
    随意勾起的过往，却仍无法释然

以为自己陈世美
    时隔多年，却仍为伊耿耿于怀

以为自己很胆怯
    却总是很鲁莽

以为自己很勇敢
    每次却总小心翼翼

以为自己很洒脱
    却一直在纠结

或许一直骗别人
    自己却当了真

或许一直把自己骗
    自己却从未当真

----
我不懂我自己，就像你也不懂你自己
&lt;/code&gt;&lt;/pre&gt;
</content>
   </entry>
   
   <entry>
     <title>后端代理——跨域的另一种方案</title>
     <link href="http://www.stupig.me/blog/2012/08/20/web-proxy-for-cross-domain-xmlhttprequest-calls/"/>
     <updated>2012-08-20T00:00:00+08:00</updated>
     <id>http://www.stupig.me/blog/2012/08/20/web-proxy-for-cross-domain-xmlhttprequest-calls</id>
     <content type="html">&lt;h3&gt;跨域的前端实现方案有很多种&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;跨子域可以采用&lt;code&gt;iframe proxy&lt;/code&gt;的方式，支持&lt;code&gt;GET&lt;/code&gt;和&lt;code&gt;POST&lt;/code&gt;，支持异步&lt;code&gt;POST&lt;/code&gt;。缺点是：范围较窄，限定在“跨子域”，而且需要在目标服务器增加额外的文件。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JSONP的方式，支持双向通信。只支持&lt;code&gt;GET&lt;/code&gt;。缺点是：不支持&lt;code&gt;POST&lt;/code&gt;，同时需要目标服务器在服务端支持。&lt;a href=&quot;http://www.ibm.com/developerworks/cn/web/wa-aj-jsonp1/&quot;&gt;http://www.ibm.com/developerworks/cn/web/wa-aj-jsonp1/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;iframe&lt;/code&gt;的&lt;code&gt;window.name&lt;/code&gt;的方式，支持跨主域。缺点是：不支持&lt;code&gt;POST&lt;/code&gt;，不过已经很赞了：）&lt;a href=&quot;http://www.planabc.net/2008/09/01/window_name_transport/&quot;&gt;http://www.planabc.net/2008/09/01/window_name_transport/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTML5 postMessage，支持双向通信。缺点是：仅限于HTML5。结合&lt;code&gt;window.name&lt;/code&gt;的方式，就很赞了~&lt;a href=&quot;http://js8.in/752.html&quot;&gt;http://js8.in/752.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;iframe&lt;/code&gt; + &lt;code&gt;location.hash&lt;/code&gt;的方式跨主域，功能强大，兼容性好，支持跨域的&lt;code&gt;js&lt;/code&gt;调用,支持双向通信。缺点是：太复杂，会嵌套太多的&lt;code&gt;iframe&lt;/code&gt;，同时数据直接写在&lt;code&gt;url&lt;/code&gt;中，数据大小受限而且数据暴露在外。&lt;a href=&quot;http://jj7jj7jj.iteye.com/blog/1120231http://www.nowamagic.net/librarys/veda/detail/165&quot;&gt;http://jj7jj7jj.iteye.com/blog/1120231http://www.nowamagic.net/librarys/veda/detail/165&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;利用&lt;code&gt;Flash&lt;/code&gt;跨域，优点是支持强大，相对简单。缺点是：依赖flash，需要在服务器更目录放置&lt;code&gt;crossdomain.xml&lt;/code&gt;文件。 &lt;a href=&quot;http://www.colorhook.com/blog/?p=789&quot;&gt;http://www.colorhook.com/blog/?p=789&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;hr /&gt;

&lt;h3&gt;需求：&lt;/h3&gt;

&lt;p&gt;讲完了前端跨域的实现方案，再讲下我的需求：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;本地调用美团的&lt;code&gt;deal&lt;/code&gt;的&lt;code&gt;API&lt;/code&gt;，然后获取&lt;code&gt;deal&lt;/code&gt;的列表。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;最开始，我想通过JSONP的方式去做，但是发现&lt;code&gt;API&lt;/code&gt;不支持&lt;code&gt;callback&lt;/code&gt;，于是，我手动在&lt;code&gt;dev&lt;/code&gt;上输出时为它添加了支持：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;    echo (isset($_GET[&amp;#39;callback&amp;#39;]) ? $_GET(&amp;#39;callback&amp;#39;).&amp;#39;(&amp;#39;.$jsonData.&amp;#39;)&amp;#39; : $jsonData);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;然后问题解决了。&lt;/p&gt;

&lt;p&gt;但是，当我回到自己的蜗居，因为没有公司&lt;code&gt;VPN&lt;/code&gt;，是访问不到公司内网环境的。于是新的需求出现了：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;如何在不修改服务器资源文件的情况下，获取到&lt;code&gt;deal&lt;/code&gt;列表。&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;方案选取&lt;/h3&gt;

&lt;p&gt;我测试了下，实际上浏览器直接访问线上给手机端的&lt;code&gt;API&lt;/code&gt;地址，是可以正常获取到数据。这意味着，它只是一个再普通不过的&lt;code&gt;GET&lt;/code&gt;请求。
那我的方案有哪些呢？楼上的&lt;code&gt;3&lt;/code&gt;和&lt;code&gt;4&lt;/code&gt;（&lt;code&gt;5&lt;/code&gt;我担心数据容量限制）。考虑到我要去不断操作&lt;code&gt;iframe&lt;/code&gt;，我也不太想去做。&lt;/p&gt;

&lt;p&gt;那还有吗？是的，我们可以通过后端代理的方式，将跨域的任务交给后端。&lt;/p&gt;

&lt;p&gt;与前端不同，用proxy在服务器端协助是一种后端的跨域请求方案，可以降低前端开发的压力。&lt;/p&gt;

&lt;h3&gt;利用后端proxy跨域请求的原理&lt;/h3&gt;

&lt;p&gt; &lt;img src=&quot;/post_images/2012/08/web_proxy.gif&quot; title=&quot;后端代理流程图&quot; alt=&quot;web proxy flow chart&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;图片来自&lt;code&gt;Yahoo&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;优势&lt;/h3&gt;

&lt;p&gt;前端开发人员只要简单地对网址进行&lt;code&gt;encode&lt;/code&gt;、拼装就能实现跨域请求，相对其他前端手段，开发难度大大降低。&lt;/p&gt;

&lt;h3&gt;代码&lt;/h3&gt;

&lt;p&gt;跨域时，前端浏览器向同一域名下的&lt;code&gt;proxy&lt;/code&gt;发出请求，要求获取其它域名下的数据（这个请求不跨域），后端再据此对指定地址发出跨域请求（后端&lt;code&gt;curl&lt;/code&gt;不受跨域限制），收到响应后后端把响应体重新包装、返回给前端。&lt;/p&gt;

&lt;p&gt;整个过程中，前端误以为这是同一域下的结果，也就不会出现限制访问&lt;/p&gt;

&lt;p&gt;前端请求本地的&lt;code&gt;webservice/deals.php&lt;/code&gt;，这里的&lt;code&gt;deals.php&lt;/code&gt;实际上只是一个代理（&lt;code&gt;deals.php&lt;/code&gt;可以再改进成通用的&lt;code&gt;proxy&lt;/code&gt;）。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;client page:&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE HTML&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;backbone&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;css/reset.css&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;js/lib/zepto.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;js/lib/datastorage.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;js/lib/underscore.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;js/lib/backbone.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// ROOT_URL = &amp;#39;http://www.gsqmt.dev.sankuai.com/api/v4/dealasync&amp;#39;;&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ROOT_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/backbone/webservice/deals.php&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
      &lt;span class=&quot;nx&quot;&gt;Backbone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emulateHTTP&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;Backbone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emulateJSON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Deals&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Backbone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Deal&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ROOT_URL&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
 
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deals&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Deals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;deals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;dataType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ROOT_URL&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;ws_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/path/to/service&amp;#39;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;division&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;北京&amp;#39;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1,2,3,4,5&amp;#39;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;// console.log(collection, res)&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;// deals.add(res.new);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;server proxy:&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * PHP Proxy example&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * Responds to both HTTP GET and POST requests&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;// 要访问的URL_ROOT&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;HOSTNAME&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://www.meituan.com&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;// 设置`REST`请求的路径&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// `POST`还是`GET`请求？&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ws_path&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ws_path&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ws_path&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HOSTNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;// `GET`请求的拼接上`queryString`&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ws_path&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ws_path&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;urlencode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;=&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;urlencode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;amp;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;// 创建一个`curl`的`session`&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;curl_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;// 如果是`POST`，将请求数据，放进请求的`body`中&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ws_path&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$postvars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$postvars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;urlencode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;=&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;urlencode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;amp;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;curl_setopt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CURLOPT_POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;curl_setopt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CURLOPT_POSTFIELDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$postvars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;// 不添加`HTTP`请求头，只有请求内容&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;curl_setopt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CURLOPT_HEADER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;curl_setopt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CURLOPT_RETURNTRANSFER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 
 
&lt;span class=&quot;c1&quot;&gt;// 发出请求&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;curl_exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;// 根据`web service`返回的数据类型，设置响应的`Content-Type`&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 
 
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;curl_close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;hr /&gt;

&lt;h3&gt;参考文档&lt;/h3&gt;

&lt;p&gt;JavaScript: Use a Web Proxy for Cross-Domain XMLHttpRequest Calls：&lt;a href=&quot;http://developer.yahoo.com/javascript/howto-proxy.html&quot;&gt;http://developer.yahoo.com/javascript/howto-proxy.html&lt;/a&gt;&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>使用wget抓取整站资源的脚本</title>
     <link href="http://www.stupig.me/blog/2012/08/20/use-wget-to-dump-entire-site/"/>
     <updated>2012-08-20T00:00:00+08:00</updated>
     <id>http://www.stupig.me/blog/2012/08/20/use-wget-to-dump-entire-site</id>
     <content type="html">&lt;p&gt;&lt;code&gt;wget&lt;/code&gt;是一个命令行工具，用于批量下载文件，支持&lt;code&gt;HTTP&lt;/code&gt;和&lt;code&gt;FTP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;wget&lt;/code&gt;十分强大，而且几乎所有的&lt;code&gt;*nux&lt;/code&gt;的都支持这个工具（&lt;code&gt;mac&lt;/code&gt;下如果安装了&lt;code&gt;homebrew&lt;/code&gt;的话，可以通过&lt;code&gt;brew install wget&lt;/code&gt;进行安装）&lt;/p&gt;

&lt;p&gt;因此，我们可以利用&lt;code&gt;wget&lt;/code&gt;去构建抓取整站资源的&lt;code&gt;bash&lt;/code&gt;脚本：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 下载所有资源&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --recursive \&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 不获取example.com之外的链接资源&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --domains example.com \&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 不覆盖已有文件(使用场景是，断点续传)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --no-clobber \&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --html-extension \&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 修改文件名，让其可以再windows系统下work&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --restrict-file-names=windows \&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --no-clobber \&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 将链接转换为相对地址，以让本地可用&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --convert-links \&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 获取页面所有的组成元素（image css等）&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --page-requisites \&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 不去创建带host前缀的文件夹&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --no-host-directories \&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 在当前目录下下载&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --no-directories \&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 不去下载robots.txt&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --execute robots=off \&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 获取整站资源&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --mirror \&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 不去获取这些目录，黑名单方式&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --exclude-directories /comment/reply/,/aggregator/,/user/ \&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --reject &amp;quot;aggregator*&amp;quot; \&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 不去获取stupig.com/backbone之外的链接资源，白名单方式&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --no-parent \&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# stupig.me&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ADDR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;SERVER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$(echo $ADDR | sed &amp;#39;s/\(.*:\/\/\)\([a-zA-Z0-9\.\-\_]*\)\(\/.*\)/\2/g&amp;#39;)&amp;quot;&lt;/span&gt;
wget &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --recursive &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --domains&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SERVER&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --no-clobber &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --html-extension &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --restrict-file-names&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;windows &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --no-clobber &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --convert-links &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --page-requisites &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --no-host-directories &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --execute &lt;span class=&quot;nv&quot;&gt;robots&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;off &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --mirror &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --exclude-directories /comment/reply/,/aggregator/,/user/ &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --reject &lt;span class=&quot;s2&quot;&gt;&amp;quot;aggregator*&amp;quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --no-parent &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;$ADDR&amp;quot;&lt;/span&gt;
find &lt;span class=&quot;nv&quot;&gt;$SERVER&lt;/span&gt; -type f -name &lt;span class=&quot;s2&quot;&gt;&amp;quot;*.css&amp;quot;&lt;/span&gt; -exec cat &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt; |
grep -o &lt;span class=&quot;s1&quot;&gt;&amp;#39;url(/[^)]*)&amp;#39;&lt;/span&gt; |
sort |
uniq |
sed &lt;span class=&quot;s1&quot;&gt;&amp;#39;s/^url(\(.*\))$/http:\/\/&amp;#39;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SERVER&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;\1/&amp;#39;&lt;/span&gt; |
wget --mirror --page-requisites -i -
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i in &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;find &lt;span class=&quot;nv&quot;&gt;$SERVER&lt;/span&gt; -type f -name &lt;span class=&quot;s2&quot;&gt;&amp;quot;*.css&amp;quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PREFIX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$(echo $i | sed &amp;#39;s/[^\/]*//g; s/\/$//; s/\//..\\\//g&amp;#39;)&amp;quot;&lt;/span&gt;
    sed -i &lt;span class=&quot;s1&quot;&gt;&amp;#39;s/url(\//url(&amp;#39;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PREFIX&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/g&amp;#39;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;关于脚本中用到的&lt;code&gt;wget&lt;/code&gt;的参数，我已经做了注释。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;line 47 - 52&lt;/code&gt;:  &lt;code&gt;find $SERVER ....&lt;/code&gt; 是找到&lt;code&gt;.css&lt;/code&gt;的链接文件，并下载下来&lt;/p&gt;

&lt;p&gt;&lt;code&gt;line 53 - 56&lt;/code&gt;:  &lt;code&gt;for i ....&lt;/code&gt;是为了修正&lt;code&gt;css&lt;/code&gt;链接&lt;/p&gt;

&lt;hr /&gt;

&lt;h3&gt;参考资料&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;wget&lt;/code&gt;使用手册：&lt;a href=&quot;http://www.gnu.org/software/wget/manual/wget.html&quot;&gt;http://www.gnu.org/software/wget/manual/wget.html&lt;/a&gt;&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>Web App或者Hybrid App静态资源管理</title>
     <link href="http://www.stupig.me/blog/2012/08/07/technology-selection-about-html5-storage/"/>
     <updated>2012-08-07T00:00:00+08:00</updated>
     <id>http://www.stupig.me/blog/2012/08/07/technology-selection-about-html5-storage</id>
     <content type="html">&lt;p&gt;准备开始与移动端的童鞋们一起搞Hybrid App，由于之前大家也都没有什么经验，所以将本来的技术选型讨论，搞的跑题了，搞成了Web App或者说Hybrid App的静态资源管理的讨论。不过，索性就这个细节问题挖一下了：&lt;/p&gt;

&lt;p&gt;同事的建议，是利用&lt;code&gt;local storage&lt;/code&gt;自主研发一个静态资源管理器（&lt;code&gt;Resources Manager&lt;/code&gt;），提供&lt;code&gt;create&lt;/code&gt;、&lt;code&gt;read&lt;/code&gt;、&lt;code&gt;update&lt;/code&gt;、&lt;code&gt;delete&lt;/code&gt;接口，模块化加载静态资源（&lt;code&gt;js&lt;/code&gt;、&lt;code&gt;css&lt;/code&gt;、&lt;code&gt;template&lt;/code&gt;）。好处是，接口明确，保证核心能控制所有的资源，保证资源完全控制权（原因是在&lt;code&gt;Hybrid App&lt;/code&gt;开发过程中，不要被&lt;code&gt;native developer&lt;/code&gt;牵制）。&lt;/p&gt;

&lt;p&gt;个人认为：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;针对今天提到的资源管理器（&lt;code&gt;Resources Manager&lt;/code&gt;），究竟是要自己实现一个模块化加载（类似&lt;code&gt;seaJS&lt;/code&gt;等，不知道小明是不是这个意思）和管理，还是使用HTML5所支持的新的API去应用&lt;/p&gt;

&lt;p&gt;我建议还是使用&lt;code&gt;HTML5&lt;/code&gt;的&lt;code&gt;application cache&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;  首先，我们的需求很明确：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   1）尽可能的缓存静态资源，减少http请求，快速响应用户。
   2）在资源更新的情况下，能及时更新，而且只更新需要更新的资源档。
   3）某些相互依赖的资源（比方说js），一旦某一个更新失败：要么回滚；要么重新更新，保证依赖资源都得到更新。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  其次，根据我们的需求，看&lt;code&gt;application cache&lt;/code&gt;的支持情况：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   1) `application cache`的初衷就是为了满足`offline`情况下，用户对于静态资源诉求，可以有效缓存静态资源（具体缓存的大小，有待研究，但是常用静态资源肯定不是问题）。
   2) `application cache`在`manifest`更新的情况下，可以按需更新。
   3) 使用`application cache`缓存资源，更符合设计思路，就像HTML中注意标签的语义性一样。
   4) `application cache`在资源下载失败时，会自动回滚，使用老的资源。
   5) `application cache`是基于事件响应式的，资源更新成功失败等的事件å，我们是可以捕捉到的，进而手动更新相关资源的。(`application cache`的具体事件各浏览器下的支持情况，还需要再测试)
   6) `application cache`稳定，有丰富的应用实例（离线gmail等）
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  再者，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   1）不建议重复造轮子，即使是做资源管理器个人认为，应该拆分为至少两部分，资源模块化加载和资源的管理（CRUD接口），而模块化加载，是现有很多库可供使用的（`seaJS`、`requireJS`等）
   2）不建议将静态资源存储在`local storage`里。原因:
        1） `web storage`（这里泛泛来讲，可以包括`cookie`、`local storage`、`session storage`、`User data(IE6/7)`），目的很明确，它的初衷就是用来存储数据（或者准确说`structure data`）的。这就好像HTML标签的语义性。当然，细分下来`web storage`的每种的分工也是不同的，这里不赘述。
        2）`local storage`空间尽管不小（前同事测的`iOS4`是2M，也不算太大），但是还是很宝贵
        3）很多时候影响问题的原因不是能和不能，而是适合和不适合
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;2.关于&lt;code&gt;IndexedDB&lt;/code&gt;，如小明所言，确实支持不好。不过，我们还有&lt;code&gt;Web SQL Database&lt;/code&gt;，尽管已经&lt;code&gt;W3 Web&lt;/code&gt;工作组已经声明不再维护更新，但是各个浏览器厂商对它的支持还是非常好：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; 1) `API`支持异步
 2) 支持事务
 3) 用来存储大段的`html fragment`（比方说商家详情信息等）很赞
 4) `SQL`语言为`SQL lite`
 5) 稳定，有丰富的案例可供参考（`FT`等）
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上，我的建议：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; 1. 采用`application cache`来做静态资源管理（可以结合一个种子js文件解决某些情况下更新失败的问题），主要用来存放不经常变的`js css image`和前端模板文件。
 2. `local storage`用来存放结构化的数据
 3. `Web SQL Database`用来存放，可能经常会变的`html fragment`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;另外，有时候，做正确的事情，比正确的做事情更重要。&lt;/p&gt;

&lt;p&gt;再思考要做什么事情之前，先考虑如何才能更快的体现处自己的价值。&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>好久没有早起</title>
     <link href="http://www.stupig.me/blog/2012/07/21/thoughts-about--my-early-get-up/"/>
     <updated>2012-07-21T00:00:00+08:00</updated>
     <id>http://www.stupig.me/blog/2012/07/21/thoughts-about--my-early-get-up</id>
     <content type="html">&lt;p&gt;“好久没有起这么早”&lt;/p&gt;

&lt;p&gt;这估计是很多像我一样没有生活的北飘人谈起偶尔的早起时用烂了的话。&lt;/p&gt;

&lt;p&gt;清爽的早晨，偶尔的打破固有规律早起了一下下，戴上耳机，感受着&lt;code&gt;Robert Bonfiglio&lt;/code&gt;的舒缓，在小区内漫无目的，只是走，恣意的享受这份宁静，享受久违的的一份慵懒。
试着在这个没有生活的城市，找寻内心的那份宁静，。&lt;/p&gt;

&lt;p&gt;不过, 倘若这时是在家里的话，我定会跟我爸一起拿上钓竿，在静谧的河畔，找个僻静之所，钓上两尾。
而那时钓到钓不到已无关紧要，单单是对着那微澜的水面，唤醒自己内心的那份平和&lt;/p&gt;

&lt;p&gt;-------
7/21/2012 06:30&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>何时待追忆</title>
     <link href="http://www.stupig.me/blog/2012/07/21/not-a-good-time-to-remember-my-life/"/>
     <updated>2012-07-21T00:00:00+08:00</updated>
     <id>http://www.stupig.me/blog/2012/07/21/not-a-good-time-to-remember-my-life</id>
     <content type="html">&lt;h4&gt;--------------------------致 我们无处安放的青春&lt;/h4&gt;

&lt;p&gt;不知道什么年纪适合回忆。&lt;/p&gt;

&lt;p&gt;高中的时候。
课业的负担，名次的压力，酸涩的暧昧，亢奋的雄性激素，刚过了小屁孩的年纪，对未来只是单纯美好的憧憬，
这显然不是一个适合回忆的年纪&lt;/p&gt;

&lt;p&gt;大学的时候。
抛弃了机械化和青涩的高中，惧怕着毕业后的各种不确定，放肆而苟且的享受着当下，享受着青春的荷尔蒙。
这显然不是一个适合回忆的年纪。&lt;/p&gt;

&lt;p&gt;大学毕业。
终于是散了好些故事，送出没有送出的告白，赢了输了的比赛，可口难吃的饭菜，结了解了的矛盾，说了未说的情话，蹩脚标准的普通话……在毕业这件小事上，都是那么的微不足道。而毕业于剩下的人生，却甚至连序曲都算不上。在那个骄阳似火的盛夏，在一顿混着眼泪、欢笑和祝福的酒足饭饱后，各自转身，再无言。
这个夏天，显然不是一个适合回忆的季节。&lt;/p&gt;

&lt;p&gt;终于是有的没的，好的坏的，宅的飘的的都工作了。屌丝、高富帅、白富美、穷矮挫各自的身份也已经清晰。曾经不敢面对的未来，已经成了苦逼的当下。我们卖命的工作，拼命的迎合，无奈的自嘲，不懈的制造着搭讪与被搭讪。我们考虑和被考虑着房子和车子。我们拿自己的肉身对抗着时代的利欲洪流，搏出位，搏上位。而这，显然不是一个适合回忆的年纪。&lt;/p&gt;

&lt;p&gt;至我写下，开始明白：
这不是一个适合回忆的时代，太多的年代只适合成为回忆……&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>JS对象字面量、构造函数包装对象之间的区别和使用</title>
     <link href="http://www.stupig.me/blog/2012/05/22/differences-between-primitive-wrapper-and-literal-variable-and-its-use-in-javascript/"/>
     <updated>2012-05-22T00:00:00+08:00</updated>
     <id>http://www.stupig.me/blog/2012/05/22/differences-between-primitive-wrapper-and-literal-variable-and-its-use-in-javascript</id>
     <content type="html">&lt;p&gt;原谅我&lt;code&gt;JavaScrip&lt;/code&gt;t理论书读书实在太少，加之英语也挺烂，所以就取了个这么奇葩的标题。&lt;/p&gt;

&lt;p&gt;理解下文的前提是建立在对于这三种类型的准确理解基础上的，而代码更懂我:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 对象字面量&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;this is str0&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 构造函数包装对象&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;this is str1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;并且本文主要围绕&lt;code&gt;string&lt;/code&gt;、&lt;code&gt;number&lt;/code&gt;和&lt;code&gt;boolean&lt;/code&gt;三种基本数据类型讨论。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;有了这个前提，就看一个例子，原生数字字面量和数字构造函数对象的区别:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 数字字面量&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &amp;quot;number&amp;quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 数字构造函数包装对象&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nobj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nobj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &amp;quot;object&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;问题:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ?&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nobj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nobj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ?&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;nobj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true or false ?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;结果是什么，为什么?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;字面量对象的类型就是&lt;code&gt;number&lt;/code&gt;，而构造函数对象的类型就是一个&lt;code&gt;object&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nobj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nobj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 为其添加属性，并不会报错&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;nobj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// TypeError: Object 1 has no method &amp;#39;say&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;nobj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Number, if use alert instead of console.log, the result will be 1, why?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;上面的例子也可以看到，构造函数对象——做为构造函数的实例，其本身就是一个对象。而字面量则是简单类型，无法为其添加属性。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;再看&lt;a href=&quot;http://madscript.com/&quot;&gt;元彦&lt;/a&gt;blog中&lt;a href=&quot;http://madscript.com/javascript/javscript-float-number-compute-problem/&quot;&gt;JavaScript浮点运算问题分析与解决&lt;/a&gt;一文结尾，作者给出了一个很好的解决JavaScript浮点运算问题的方法。但是，代码实际执行结果却出错了:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toFixed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;digits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// toFixed() 精度参数须在 0 与20 之间&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toFixed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toFixed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// 结果为True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;既然字面量是简单类型，为什么还能调用&lt;code&gt;number&lt;/code&gt;的&lt;code&gt;toFixed&lt;/code&gt;方法呢？
因为字面量在执行到&lt;code&gt;.toFixed()&lt;/code&gt;时，会临时悄悄（XD）转换成一个对象，并表现处对象所具有的行为。而这种转换，仅当你调用对应类型的实例方法时执行。&lt;/p&gt;

&lt;p&gt;所以既然字面量可以仅在需要的时候才转成对象，那为什么不使用字面量呢，又何必花费更大的开销来用&lt;code&gt;construtor&lt;/code&gt;去进行冗余的包裹操作？！这也是向&lt;code&gt;Douglas Crockford&lt;/code&gt;建议使用字面量的原因。&lt;/p&gt;

&lt;p&gt;但构造函数包装对象果真是一无是处吗？这里只有一条使用的理由，相信从上面的例子中也能看出来，即当有需求要对基本数据类型，增加方法属性时，才有必要使用构造函数包裹。&lt;/p&gt;

&lt;h3&gt;参考资料&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.cn/mn/detailApp/ref=asc_df_0596806752409002/&quot;&gt;《JavaScript Patterns》第3章Primitive Wrappers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://madscript.com/javascript/javscript-float-number-compute-problem/&quot;&gt; JavaScript浮点运算问题分析与解决&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2010/01/12_javascript_syntax_structures_you_should_not_use.html&quot;&gt; 12种不宜使用的Javascript语法&lt;/a&gt;&lt;/p&gt;
</content>
   </entry>
   

</feed>